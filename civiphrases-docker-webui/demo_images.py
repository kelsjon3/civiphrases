#!/usr/bin/env python3
"""
Demo script for the image grid functionality.

This script demonstrates how images would be captured and displayed
in the web UI.
"""

import json
import time
from datetime import datetime

def create_demo_images():
    """Create demo image data for testing."""
    demo_images = []
    
    # Create some sample images
    for i in range(12):
        demo_images.append({
            'id': f'demo_{i}',
            'url': f'https://via.placeholder.com/400x400/667eea/ffffff?text=Demo+{i+1}',
            'title': f'Demo Image {i+1}',
            'model': f'AI Model {i % 3 + 1}',
            'created': datetime.now().isoformat(),
            'source': 'demo: test_user'
        })
    
    return demo_images

def simulate_civitai_log():
    """Simulate the log format that would be generated by civiphrases."""
    images = create_demo_images()
    
    log_message = f"CAPTURED_IMAGES: {json.dumps({'images': images, 'source': 'user: test_user'})}"
    
    print("Simulated civiphrases log message:")
    print(log_message)
    print(f"\nTotal images: {len(images)}")
    
    return images

def test_image_parsing():
    """Test the image parsing logic."""
    from app import capture_civitai_images_from_logs
    
    # Create a mock log entry
    mock_logs = [
        {
            'timestamp': '2025-01-20 16:30:00',
            'level': 'INFO',
            'message': 'Fetching images for user: test_user'
        },
        {
            'timestamp': '2025-01-20 16:30:05',
            'level': 'INFO',
            'message': simulate_civitai_log()
        }
    ]
    
    # Parse the logs
    images, source = capture_civitai_images_from_logs(mock_logs)
    
    print(f"\nParsed {len(images)} images from source: {source}")
    
    if images:
        print("\nFirst image:")
        print(f"  ID: {images[0]['id']}")
        print(f"  Title: {images[0]['title']}")
        print(f"  Model: {images[0]['model']}")
        print(f"  URL: {images[0]['url']}")

if __name__ == "__main__":
    print("ðŸŽ¨ Civiphrases Image Grid Demo")
    print("=" * 40)
    
    # Test the image creation
    demo_images = create_demo_images()
    print(f"Created {len(demo_images)} demo images")
    
    # Test the log simulation
    simulate_civitai_log()
    
    # Test the parsing (if app.py is available)
    try:
        test_image_parsing()
    except ImportError:
        print("\nNote: app.py not available for parsing test")
    
    print("\nâœ… Demo completed successfully!")
    print("\nTo test in the web UI:")
    print("1. Start the Flask server")
    print("2. Submit a form to run civiphrases")
    print("3. Watch the right side populate with images")
